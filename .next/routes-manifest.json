{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/api/:path*",
      "headers": [
        {
          "key": "Access-Control-Allow-Origin",
          "value": "*"
        },
        {
          "key": "Access-Control-Allow-Methods",
          "value": "GET, POST, PUT, DELETE, OPTIONS"
        },
        {
          "key": "Access-Control-Allow-Headers",
          "value": "Content-Type, Authorization"
        }
      ],
      "regex": "^/api(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    }
  ],
  "dynamicRoutes": [
    {
      "page": "/api/v1/admin/transactions/[id]",
      "regex": "^/api/v1/admin/transactions/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/v1/admin/transactions/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/v1/admin/users/[id]",
      "regex": "^/api/v1/admin/users/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/v1/admin/users/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/v1/notifications/[id]",
      "regex": "^/api/v1/notifications/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/v1/notifications/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/v1/users/username/[username]",
      "regex": "^/api/v1/users/username/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPusername": "nxtPusername"
      },
      "namedRegex": "^/api/v1/users/username/(?<nxtPusername>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/v1/users/[id]",
      "regex": "^/api/v1/users/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/v1/users/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/v1/users/[id]/donations",
      "regex": "^/api/v1/users/([^/]+?)/donations(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/v1/users/(?<nxtPid>[^/]+?)/donations(?:/)?$"
    },
    {
      "page": "/obs/[creatorId]",
      "regex": "^/obs/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPcreatorId": "nxtPcreatorId"
      },
      "namedRegex": "^/obs/(?<nxtPcreatorId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/obs/[creatorId]/settings",
      "regex": "^/obs/([^/]+?)/settings(?:/)?$",
      "routeKeys": {
        "nxtPcreatorId": "nxtPcreatorId"
      },
      "namedRegex": "^/obs/(?<nxtPcreatorId>[^/]+?)/settings(?:/)?$"
    },
    {
      "page": "/profile/[username]",
      "regex": "^/profile/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPusername": "nxtPusername"
      },
      "namedRegex": "^/profile/(?<nxtPusername>[^/]+?)(?:/)?$"
    },
    {
      "page": "/widget/[creatorId]",
      "regex": "^/widget/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPcreatorId": "nxtPcreatorId"
      },
      "namedRegex": "^/widget/(?<nxtPcreatorId>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/about",
      "regex": "^/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/about(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin/payouts",
      "regex": "^/admin/payouts(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/payouts(?:/)?$"
    },
    {
      "page": "/admin/reports",
      "regex": "^/admin/reports(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/reports(?:/)?$"
    },
    {
      "page": "/admin/settings",
      "regex": "^/admin/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/settings(?:/)?$"
    },
    {
      "page": "/admin/transactions",
      "regex": "^/admin/transactions(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/transactions(?:/)?$"
    },
    {
      "page": "/admin/users",
      "regex": "^/admin/users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/users(?:/)?$"
    },
    {
      "page": "/auth/forgot-password",
      "regex": "^/auth/forgot\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/forgot\\-password(?:/)?$"
    },
    {
      "page": "/auth/login",
      "regex": "^/auth/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/login(?:/)?$"
    },
    {
      "page": "/auth/register",
      "regex": "^/auth/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/register(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/dashboard/profile",
      "regex": "^/dashboard/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/profile(?:/)?$"
    },
    {
      "page": "/dashboard/settings",
      "regex": "^/dashboard/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/settings(?:/)?$"
    },
    {
      "page": "/dashboard/transactions",
      "regex": "^/dashboard/transactions(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/transactions(?:/)?$"
    },
    {
      "page": "/donation/success",
      "regex": "^/donation/success(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/donation/success(?:/)?$"
    },
    {
      "page": "/explore",
      "regex": "^/explore(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/explore(?:/)?$"
    },
    {
      "page": "/faq",
      "regex": "^/faq(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/faq(?:/)?$"
    },
    {
      "page": "/onboarding",
      "regex": "^/onboarding(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/onboarding(?:/)?$"
    },
    {
      "page": "/payment/success",
      "regex": "^/payment/success(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/payment/success(?:/)?$"
    },
    {
      "page": "/privacy",
      "regex": "^/privacy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/privacy(?:/)?$"
    },
    {
      "page": "/terms",
      "regex": "^/terms(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/terms(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": [
    {
      "source": "/api/:path*",
      "destination": "/api/:path*",
      "regex": "^/api(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    }
  ]
}